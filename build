#!/bin/bash
RUN_TESTS=1
# tests can be disabled by passing the -f (fast) option
while getopts "f" OPTION
do
    case $OPTION in
    f)
        RUN_TESTS=0
        echo "Skipping unit tests while building"; echo ""
        ;;
    esac
done

run_unit_tests() {
    pushd bin > /dev/null
    for file in ./*_test
    do
        echo "running unit tests $file"
        $file
    done
    popd > /dev/null
}

echo "Building required data files for predictors."
pushd predictors/getdata > /dev/null
octave -q makeBigFiles
popd > /dev/null
pushd predictors/getdata/tst > /dev/null
octave -q setEqDataDivisionsTest.m
popd > /dev/null
echo "Predictor data files built."; echo ""

echo "Building required data files for recommenders."
pushd recommenders > /dev/null
octave -q makeMatBin
popd > /dev/null
echo "Recommender binary data files built."; echo ""

echo "Building common C++ utils."
pushd lib/utils > /dev/null
make
if [ $RUN_TESTS -eq 1 ];
then
    run_unit_tests
fi
popd > /dev/null
echo "C++ utils built."; echo ""

echo "Building C++ investor classes."
echo "Building Investor abstract base class."
pushd investors/common > /dev/null
make
if [ $RUN_TESTS -eq 1 ];
then
    run_unit_tests
fi
popd > /dev/null
echo "Investor base class built."
echo "Building Investor01."
pushd investors/01 > /dev/null
make
if [ $RUN_TESTS -eq 1 ];
then
    run_unit_tests
fi
popd > /dev/null
echo "Investor01 built."
echo "C++ investor classes built."; echo ""

echo "Building C++ simulator classes."
pushd simulators/common > /dev/null
make
if [ $RUN_TESTS -eq 1 ];
then
    run_unit_tests
fi
popd > /dev/null
echo "C++ simulator classes built."; echo ""

# Build other required files

echo "Done!"
